The 7-base_model module

using "BaseGeometry"

import the class from the moduls 7-base_model:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

create an instance of the class:
	>>> bg = BaseGeometry()


checking module docstrings:
	>>> docstring = __import__("7-base_geometry").__doc__
	>>> len(docstring) > 1
	True

checking class docstrings:
	>>> clss = __import__("7-base_geometry").BaseGeometry.__doc__
	>>> len(clss) > 1
	True

checking method docstrings:
	>>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	 >>> len(mod1) > 1
	 True
	 >>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
         >>> len(mod2) > 1
         True

testing with valid input:
	>>> bg.integer_validator("test", 10)

testing with invalid input(less than or equal to zero):
	>>> bg.integer_validator("test", -10)
	Traceback (most recent call last):
    	...
	ValueError: test must be greater than 0

testing sith invalid input(not integer):
	>>> bg.integer_validator("test", "string")
	Traceback (most recent call last):
    	...
	TypeError: test must be an integer

testing for area failure:
	 >>> b = BaseGeometry()
	 >>> b.area()
	 Traceback (most recent call last):
	 ...
	 Exception: area() is not implemented
